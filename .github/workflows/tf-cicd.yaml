name: Terraform pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  TF_VERSION: "1.13.3"
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

  TF_VAR_public_key: ${{ secrets.PUBLIC_KEY }}
  TF_VAR_private_key: ${{ secrets.PRIVATE_KEY }}
  
  TF_VAR_private_key_path: ${{ secrets.PRIVATE_KEY_PATH }}

  TF_VAR_region: ${{ secrets.AWS_REGION }}
  TF_VAR_vpc_cidr_block: ${{ secrets.VPC_CIDR_BLOCK }}

  TF_VAR_ssh_access_ip: ${{ secrets.SSH_ACCESS_IP }}  
  TF_VAR_public_subnet_cidr_block: ${{ secrets.PUBLIC_SUBNET_CIDR_BLOCK }}
  TF_VAR_private_subnet_cidr_block: ${{ secrets.PRIVATE_SUBNET_CIDR_BLOCK }} 
  
  TF_VAR_dbname: ${{ secrets.DBNAME }}
  TF_VAR_dbuser: ${{ secrets.DBUSER }}
  TF_VAR_dbpassword: ${{ secrets.DBPASSWORD }}  


jobs:
  plan:
    name: Terraform Install, Validate, & Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: ${{ env.TF_VERSION }}

      - name: Create private_key file
        run: |
          echo "${{ secrets.PRIVATE_KEY}}" > private_key
          chmod 400 private_key

      - name: Upload private key artifact
        uses: actions/upload-artifact@v4
        with:
          name: private-key
          path: private_key

      - name: TF Initialize, Format, Validate & Plan
        run: |
          terraform init
          terraform fmt -recursive      

      - name: TF Validate
        run: |
          terraform validate
      
      - name: TF Plan
        run: |
          terraform plan -out=tfplan

      - name: Upload tfplan file
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan


  deploy:
    needs: plan
    
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: deploy-approval 

    steps: 
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: ${{ env.TF_VERSION }}

      - name: Download private_key artifact
        uses: actions/download-artifact@v4
        with:
          name: private-key
          path: . 

      - name: Download tfplan file
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply  
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -auto-approve tfplan

      - name: Upload K3s kubeconfig file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: k3s-kubeconfig
          path: ./k3s-*.yaml
      
